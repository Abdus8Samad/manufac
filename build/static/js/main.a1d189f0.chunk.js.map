{"version":3,"sources":["components/Login.js","components/Welcome.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","elevation","variant","useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","marginBottom","Login","classes","useState","password","username","showPassword","values","setValues","lWidth","window","innerWidth","iconSize","dims","setDims","success","open","msg","error","alerts","setAlerts","handleClose","event","reason","handleChange","prop","target","value","useEffect","addEventListener","console","log","className","Snackbar","autoHideDuration","id","onClose","severity","src","alt","FormControl","required","fullWidth","clsx","InputLabel","OutlinedInput","aria-describedby","startAdornment","InputAdornment","position","onChange","labelWidth","FormHelperText","htmlFor","type","endAdornment","IconButton","aria-label","onClick","onMouseDown","preventDefault","edge","style","user","verify","verifyUser","setUser","handleSubmit","to","Welcome","signOut","icon","SignUp","email","lWdith","Users","App","state","isLoggedIn","index","forEach","usr","i","setState","exact","path","this","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1d189f0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { Link } from 'react-router-dom';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport '../styles/form.scss';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      marginBottom:65\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst Login = (props) =>{\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    username: '',\r\n    showPassword: false,\r\n  });\r\n  const [dims, setDims] = useState({\r\n    lWidth: window.innerWidth/8.7,\r\n    iconSize: 1\r\n  })\r\n\r\n  const [alerts, setAlerts] = useState({\r\n    success:{\r\n      open: false,\r\n      msg: ''\r\n    },\r\n    error:{\r\n      open: false,\r\n      msg: ''\r\n    }\r\n  })\r\n\r\n  const handleClose = (event,reason) => {\r\n    if(reason === \"clickaway\"){\r\n      return;\r\n    }\r\n    setAlerts({\r\n      success:{\r\n        open: false,\r\n        msg: ''\r\n      },\r\n      error:{\r\n        open: false,\r\n        msg: ''\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\r\n    let {username, password} = values;\r\n    let user = {\r\n      username,\r\n      password\r\n    }\r\n    const verify = props.verifyUser(user);\r\n    console.log(verify);\r\n    if(verify){\r\n      console.log(\"User Verified\");\r\n      props.setUser(user);\r\n      // props.history.push('/');\r\n    } else {\r\n      setAlerts({...alerts, error:{open:true,msg:'Incorrect Username Or Password !'}});\r\n    }\r\n  }\r\n\r\n  useEffect(() =>{\r\n    // if(window.innerWidth <= 580){\r\n    //   setDims({...dims, iconSize: 0.5});\r\n    // } else if(window.innerWidth <= 800){\r\n    //   setDims({...dims, iconSize: 0.7});\r\n    // }\r\n    window.addEventListener('resize',() =>{\r\n      setDims({...dims, lWidth: window.innerWidth/8.7});\r\n      console.log(\"Size changed\");\r\n      if(window.innerWidth <= 580){\r\n        setDims({...dims, iconSize: 0.5});\r\n      } else if(window.innerWidth <= 800){\r\n        setDims({...dims, iconSize: 0.7});\r\n      } else {\r\n        setDims({...dims, iconSize: 1});\r\n      }\r\n    })\r\n  },[dims])\r\n\r\n  return(\r\n      <div className=\"Login\">\r\n          <div className={classes.root}>\r\n            <Snackbar open={alerts.success.open} autoHideDuration={6000} id=\"success\" onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                {alerts.success.msg}\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={alerts.error.open} autoHideDuration={6000} id=\"error\" onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {alerts.error.msg}\r\n              </Alert>\r\n            </Snackbar>\r\n          </div>\r\n          <div className=\"image\">\r\n              <img src=\"https://colorlib.com/etc/lf/Login_v13/images/bg-01.jpg\" alt=\"Girl\"/>\r\n          </div>\r\n          <div className=\"form\">\r\n              <h2>Login</h2>\r\n              <form>\r\n                  <FormControl required fullWidth className={clsx(classes.margin,classes.textField)} variant=\"outlined\">\r\n                      <InputLabel>Username</InputLabel>\r\n                      <OutlinedInput\r\n                          aria-describedby=\"my-helper-text\"\r\n                          startAdornment={<InputAdornment position=\"start\"></InputAdornment>}\r\n                          onChange={handleChange('username')}\r\n                          labelWidth={dims.lWidth}\r\n                      />\r\n                      <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n                  </FormControl>\r\n                  <FormControl required fullWidth className={clsx(classes.margin,classes.textField)} variant=\"outlined\">\r\n                      <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                      <OutlinedInput\r\n                          startAdornment={<InputAdornment position=\"start\"></InputAdornment>}\r\n                          id=\"outlined-adornment-password\"\r\n                          type={values.showPassword ? 'text' : 'password'}\r\n                          value={values.password}\r\n                          onChange={handleChange('password')}\r\n                          labelWidth={dims.lWidth}\r\n                          endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                                edge=\"end\"\r\n                                style={{\"transform\":`scale(${dims.iconSize})`}}\r\n                              >\r\n                              {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                              </IconButton>\r\n                          </InputAdornment>\r\n                          }\r\n                      />\r\n                  </FormControl>\r\n                  <button className=\"login\" onClick={(event) => handleSubmit(event)}>Log in</button>\r\n                  <p>New User? <Link to='/signup'>Sign Up</Link> First</p>\r\n              </form>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Welcome = (props) =>{\r\n\r\n    return(\r\n        <div className=\"Welcome\">\r\n            <h1>Welcome</h1>\r\n            <button onClick={props.signOut}>SignOut</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/form.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      marginBottom:65\r\n    },\r\n    icon: {\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst SignUp = () =>{\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    username: '',\r\n    email:'',\r\n    showPassword: false,\r\n  });\r\n  const [dims, setDims] = useState({\r\n    lWidth: window.innerWidth/9,\r\n    iconSize: 1\r\n  })\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  useEffect(() =>{\r\n    if(window.innerWidth <= 580){\r\n      setDims({...dims, iconSize: 0.5});\r\n    } else if(window.innerWidth <= 800){      \r\n      setDims({...dims, iconSize: 0.7});\r\n    }\r\n    window.addEventListener('resize',() =>{\r\n      setDims({...dims, lWdith: window.innerWidth/9});\r\n      if(window.innerWidth <= 580){\r\n        setDims({...dims, iconSize: 0.5});\r\n      } else if(window.innerWidth <= 800){      \r\n        setDims({...dims, iconSize: 0.7});\r\n      } else {\r\n        setDims({...dims, iconSize: 1});\r\n      }\r\n    })\r\n  },[dims])\r\n\r\n  return(\r\n      <div className=\"SignUp\">\r\n          <div className=\"image\">\r\n              <img src=\"https://colorlib.com/etc/lf/Login_v13/images/bg-01.jpg\" alt=\"Girl\"/>\r\n          </div>\r\n          <div className=\"form\">\r\n              <h2>Sign Up</h2>\r\n              <form>\r\n              <FormControl fullWidth className={clsx(classes.margin,classes.textField)} variant=\"outlined\">\r\n                      <InputLabel>Username</InputLabel>\r\n                      <OutlinedInput\r\n                          startAdornment={<InputAdornment position=\"start\"></InputAdornment>}\r\n                          onChange={handleChange('username')}\r\n                          labelWidth={dims.lWidth}\r\n                      />\r\n                  </FormControl>\r\n                  <FormControl fullWidth className={clsx(classes.margin,classes.textField)} variant=\"outlined\">\r\n                      <InputLabel>Email</InputLabel>\r\n                      <OutlinedInput\r\n                          startAdornment={<InputAdornment position=\"start\"></InputAdornment>}\r\n                          onChange={handleChange('email')}\r\n                          labelWidth={dims.lWidth/1.7}\r\n                      />\r\n                  </FormControl>\r\n                  <FormControl fullWidth className={clsx(classes.margin,classes.textField)} variant=\"outlined\">\r\n                      <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                      <OutlinedInput\r\n                          startAdornment={<InputAdornment position=\"start\"></InputAdornment>}\r\n                          id=\"outlined-adornment-password\"\r\n                          type={values.showPassword ? 'text' : 'password'}\r\n                          value={values.password}\r\n                          onChange={handleChange('password')}\r\n                          endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                                edge=\"end\"\r\n                                style={{\"transform\":`scale(${dims.iconSize})`}}\r\n                              >\r\n                              {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                              </IconButton>\r\n                          </InputAdornment>\r\n                          }\r\n                          labelWidth={dims.lWidth}\r\n                      />\r\n                  </FormControl>\r\n                  <button className=\"signup\">Sign Up</button>\r\n                  <p>Already a User? <Link to='/'>Log In</Link></p>\r\n              </form>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default SignUp;","import React, { Component }from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Welcome from './components/Welcome';\r\nimport SignUp from './components/SignUp';\r\nimport './App.css';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\nlet Users = [\r\n  {\r\n    username:\"Abdus Samad\",\r\n    email:\"abdus8samad@gmail.com\",\r\n    password:\"Football123\"\r\n  }\r\n];\r\n\r\nexport default class App extends Component{\r\n  state = {\r\n    isLoggedIn:false,\r\n    user:null\r\n  }\r\n  verifyUser = (user) =>{\r\n    let index = -1;\r\n    Users.forEach((usr,i) =>{\r\n      if(usr.username === user.username){\r\n        index = i;\r\n      }\r\n    })\r\n    if(index !== -1){\r\n      if(user.password === Users[index].password && user.username === Users[index].username) return true;\r\n      else return false;\r\n    }\r\n    else return false;\r\n  }\r\n  setUser = (user) =>{\r\n    this.setState({\r\n      isLoggedIn:true,\r\n      user\r\n    })\r\n  }\r\n  signOut = () =>{\r\n    this.setState({\r\n      isLoggedIn:false,\r\n      user:null\r\n    })\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              {this.state.isLoggedIn ? <Welcome signOut={this.signOut}/> : <Redirect to='/login' />}\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              {this.state.isLoggedIn ? <Redirect to='/' /> : <Login verifyUser={(user) => this.verifyUser(user)} setUser={(user) => this.setUser(user)} />}\r\n            </Route>\r\n            <Route path=\"/signup\" component={SignUp} exact/>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}